// ADDS A BROWSER PREFIX TO THE PROPERTY
@mixin css3-prefix($property, $value) {
  -webkit-#{$property}: #{$value};
  -khtml-#{$property}: #{$value};
  -moz-#{$property}: #{$value};
  -ms-#{$property}: #{$value};
  -o-#{$property}: #{$value};
  #{$property}: #{$value};
}

// TRANSITION
@mixin transition($properties) {
  @include css3-prefix('transition', $properties);
}

// BORDER RADIUS
@mixin border-radius($radius: 10px) {
  @include css3-prefix('border-radius', $radius);
}

// FONT
@mixin font($weight: $normal, $size: $size-main, $family: $font-main, $line-height: $line-height) {
  font: $weight #{$size}/#{$line-height} $family;
}

// BACKGROUND IMAGE
@mixin bg($bg_position: center, $bg_size: cover, $bg_repeat: no-repeat) {
  background: {
    position: $bg_position;
    size: $bg_size;
    repeat: $bg_repeat;
  }
}

// BACKGROUND GRADIENT
@mixin background-gradient($direction: 'top', $color: #000000) {
  @if $direction == 'top' {
    background: -moz-linear-gradient(top, rgba($color, 0) 0%, rgba($color, 1) 100%);
    background: -webkit-linear-gradient(top, rgba($color, 0) 0%,rgba($color, 1) 100%);
    background: linear-gradient(to bottom, rgba($color, 0) 0%,rgba($color, 1) 100%);
    filter: progid:DXImageTransform.Microsoft.gradient( startColorstr='#{ie-hex-str(rgba($color, 0))}', endColorstr='#{ie-hex-str(rgba($color, 1))}',GradientType=0 );
  } @else if $direction == 'bottom' {
    background: -moz-linear-gradient(top, rgba($color, 1) 0%, rgba($color, 0) 100%);
    background: -webkit-linear-gradient(top, rgba($color, 1) 0%,rgba($color, 0) 100%);
    background: linear-gradient(to bottom, rgba($color, 1) 0%,rgba($color, 0) 100%);
    filter: progid:DXImageTransform.Microsoft.gradient( startColorstr='#{ie-hex-str(rgba($color, 1))}', endColorstr='#{ie-hex-str(rgba($color, 0))}',GradientType=0 );
  }
}

//BOX SHADOW
@mixin box-shadow($value: 0 5px 10px 0, $color: rgba(0,0,0,.2), $inset: false) {
  @if $inset {
    -webkit-box-shadow:inset $value $color;
    -moz-box-shadow:inset $value $color;
    box-shadow:inset $value $color;
  } @else {
    -webkit-box-shadow: $value $color;
    -moz-box-shadow: $value $color;
    box-shadow: $value $color;
  }
}


//TRANSFORM TRANSLATE
@mixin translate ( $x: -50%, $y: -50% ) {
  @include css3-prefix('transform', translate($x, $y));
}
//TRANSFORM ROTATE
@mixin rotate ( $deg: 0deg ) {
  @include css3-prefix('transform', rotate($deg));
}
//TRANSFORM SCALE
@mixin scale ( $scale: 1 ) {
  @include css3-prefix('transform', scale($scale));
}
//TRANSFORM SCALE
@mixin transform-origin ( $x: 50%, $y: 50% ) {
  @include css3-prefix('transform-origin', $x $y);
}

// Animate
@mixin animate($duration: 0.3s) {
  -webkit-transition: all $duration ease;
  -moz-transition: all $duration ease;
  -o-transition: all $duration ease;
  transition: all $duration ease;
}

//aspect ratio
@mixin aspect-ratio($width, $height) {
  position: relative;
  &:before {
    display: block;
    content: "";
    width: 100%;
    padding-top: ($height / $width) * 100%;
  }
  > .content {
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
  }
}

@mixin center-align-absolute ($top: 50%,$left: 50%){
  position: absolute;
  top: $top;
  left: $left;
  -webkit-transform: translate(-50%,-50%);
  -ms-transform: translate(-50%,-50%);
  transform: translate(-50%,-50%);
}